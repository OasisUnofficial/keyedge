#ifndef OCALLS_READER_H
#define OCALLS_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct nest3_table *nest3_table_t;
typedef struct nest3_table *nest3_mutable_table_t;
typedef const flatbuffers_uoffset_t *nest3_vec_t;
typedef flatbuffers_uoffset_t *nest3_mutable_vec_t;
typedef const struct nest2_table *nest2_table_t;
typedef struct nest2_table *nest2_mutable_table_t;
typedef const flatbuffers_uoffset_t *nest2_vec_t;
typedef flatbuffers_uoffset_t *nest2_mutable_vec_t;
typedef const struct nest1_table *nest1_table_t;
typedef struct nest1_table *nest1_mutable_table_t;
typedef const flatbuffers_uoffset_t *nest1_vec_t;
typedef flatbuffers_uoffset_t *nest1_mutable_vec_t;
typedef const struct __pointer_flatbuffers_int8_table *__pointer_flatbuffers_int8_table_t;
typedef struct __pointer_flatbuffers_int8_table *__pointer_flatbuffers_int8_mutable_table_t;
typedef const flatbuffers_uoffset_t *__pointer_flatbuffers_int8_vec_t;
typedef flatbuffers_uoffset_t *__pointer_flatbuffers_int8_mutable_vec_t;
typedef const struct __pointer_nest3_table *__pointer_nest3_table_t;
typedef struct __pointer_nest3_table *__pointer_nest3_mutable_table_t;
typedef const flatbuffers_uoffset_t *__pointer_nest3_vec_t;
typedef flatbuffers_uoffset_t *__pointer_nest3_mutable_vec_t;
typedef const struct __pointer_nest2_table *__pointer_nest2_table_t;
typedef struct __pointer_nest2_table *__pointer_nest2_mutable_table_t;
typedef const flatbuffers_uoffset_t *__pointer_nest2_vec_t;
typedef flatbuffers_uoffset_t *__pointer_nest2_mutable_vec_t;
typedef const struct __ocall_wrapper_test_nested_struct_table *__ocall_wrapper_test_nested_struct_table_t;
typedef struct __ocall_wrapper_test_nested_struct_table *__ocall_wrapper_test_nested_struct_mutable_table_t;
typedef const flatbuffers_uoffset_t *__ocall_wrapper_test_nested_struct_vec_t;
typedef flatbuffers_uoffset_t *__ocall_wrapper_test_nested_struct_mutable_vec_t;
typedef const struct __ocall_wrapper_test_two_dimensional_array_table *__ocall_wrapper_test_two_dimensional_array_table_t;
typedef struct __ocall_wrapper_test_two_dimensional_array_table *__ocall_wrapper_test_two_dimensional_array_mutable_table_t;
typedef const flatbuffers_uoffset_t *__ocall_wrapper_test_two_dimensional_array_vec_t;
typedef flatbuffers_uoffset_t *__ocall_wrapper_test_two_dimensional_array_mutable_vec_t;
#ifndef nest3_identifier
#define nest3_identifier flatbuffers_identifier
#endif
#define nest3_type_hash ((flatbuffers_thash_t)0xfabedda8)
#define nest3_type_identifier "\xa8\xdd\xbe\xfa"
#ifndef nest2_identifier
#define nest2_identifier flatbuffers_identifier
#endif
#define nest2_type_hash ((flatbuffers_thash_t)0xfbbedf3b)
#define nest2_type_identifier "\x3b\xdf\xbe\xfb"
#ifndef nest1_identifier
#define nest1_identifier flatbuffers_identifier
#endif
#define nest1_type_hash ((flatbuffers_thash_t)0xfcbee0ce)
#define nest1_type_identifier "\xce\xe0\xbe\xfc"
#ifndef __pointer_flatbuffers_int8_identifier
#define __pointer_flatbuffers_int8_identifier flatbuffers_identifier
#endif
#define __pointer_flatbuffers_int8_type_hash ((flatbuffers_thash_t)0x9b4a4145)
#define __pointer_flatbuffers_int8_type_identifier "\x45\x41\x4a\x9b"
#ifndef __pointer_nest3_identifier
#define __pointer_nest3_identifier flatbuffers_identifier
#endif
#define __pointer_nest3_type_hash ((flatbuffers_thash_t)0x5f884ef8)
#define __pointer_nest3_type_identifier "\xf8\x4e\x88\x5f"
#ifndef __pointer_nest2_identifier
#define __pointer_nest2_identifier flatbuffers_identifier
#endif
#define __pointer_nest2_type_hash ((flatbuffers_thash_t)0x6088508b)
#define __pointer_nest2_type_identifier "\x8b\x50\x88\x60"
#ifndef __ocall_wrapper_test_nested_struct_identifier
#define __ocall_wrapper_test_nested_struct_identifier flatbuffers_identifier
#endif
#define __ocall_wrapper_test_nested_struct_type_hash ((flatbuffers_thash_t)0xcc53b6af)
#define __ocall_wrapper_test_nested_struct_type_identifier "\xaf\xb6\x53\xcc"
#ifndef __ocall_wrapper_test_two_dimensional_array_identifier
#define __ocall_wrapper_test_two_dimensional_array_identifier flatbuffers_identifier
#endif
#define __ocall_wrapper_test_two_dimensional_array_type_hash ((flatbuffers_thash_t)0xafbb4974)
#define __ocall_wrapper_test_two_dimensional_array_type_identifier "\x74\x49\xbb\xaf"



struct nest3_table { uint8_t unused__; };

static inline size_t nest3_vec_len(nest3_vec_t vec)
__flatbuffers_vec_len(vec)
static inline nest3_table_t nest3_vec_at(nest3_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(nest3_table_t, vec, i, 0)
__flatbuffers_table_as_root(nest3)

__flatbuffers_define_vector_field(0, nest3, str, flatbuffers_int8_vec_t, 0)

struct nest2_table { uint8_t unused__; };

static inline size_t nest2_vec_len(nest2_vec_t vec)
__flatbuffers_vec_len(vec)
static inline nest2_table_t nest2_vec_at(nest2_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(nest2_table_t, vec, i, 0)
__flatbuffers_table_as_root(nest2)

__flatbuffers_define_table_field(0, nest2, n, __pointer_nest3_table_t, 0)
__flatbuffers_define_vector_field(1, nest2, str, flatbuffers_int8_vec_t, 0)

struct nest1_table { uint8_t unused__; };

static inline size_t nest1_vec_len(nest1_vec_t vec)
__flatbuffers_vec_len(vec)
static inline nest1_table_t nest1_vec_at(nest1_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(nest1_table_t, vec, i, 0)
__flatbuffers_table_as_root(nest1)

__flatbuffers_define_table_field(0, nest1, n, __pointer_nest2_table_t, 0)
__flatbuffers_define_vector_field(1, nest1, str, flatbuffers_int8_vec_t, 0)

struct __pointer_flatbuffers_int8_table { uint8_t unused__; };

static inline size_t __pointer_flatbuffers_int8_vec_len(__pointer_flatbuffers_int8_vec_t vec)
__flatbuffers_vec_len(vec)
static inline __pointer_flatbuffers_int8_table_t __pointer_flatbuffers_int8_vec_at(__pointer_flatbuffers_int8_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(__pointer_flatbuffers_int8_table_t, vec, i, 0)
__flatbuffers_table_as_root(__pointer_flatbuffers_int8)

__flatbuffers_define_scalar_field(0, __pointer_flatbuffers_int8, __is_null, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
__flatbuffers_define_scalar_field(1, __pointer_flatbuffers_int8, __data, flatbuffers_int8, int8_t, INT8_C(0))

struct __pointer_nest3_table { uint8_t unused__; };

static inline size_t __pointer_nest3_vec_len(__pointer_nest3_vec_t vec)
__flatbuffers_vec_len(vec)
static inline __pointer_nest3_table_t __pointer_nest3_vec_at(__pointer_nest3_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(__pointer_nest3_table_t, vec, i, 0)
__flatbuffers_table_as_root(__pointer_nest3)

__flatbuffers_define_scalar_field(0, __pointer_nest3, __is_null, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
__flatbuffers_define_table_field(1, __pointer_nest3, __data, nest3_table_t, 0)

struct __pointer_nest2_table { uint8_t unused__; };

static inline size_t __pointer_nest2_vec_len(__pointer_nest2_vec_t vec)
__flatbuffers_vec_len(vec)
static inline __pointer_nest2_table_t __pointer_nest2_vec_at(__pointer_nest2_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(__pointer_nest2_table_t, vec, i, 0)
__flatbuffers_table_as_root(__pointer_nest2)

__flatbuffers_define_scalar_field(0, __pointer_nest2, __is_null, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
__flatbuffers_define_table_field(1, __pointer_nest2, __data, nest2_table_t, 0)

struct __ocall_wrapper_test_nested_struct_table { uint8_t unused__; };

static inline size_t __ocall_wrapper_test_nested_struct_vec_len(__ocall_wrapper_test_nested_struct_vec_t vec)
__flatbuffers_vec_len(vec)
static inline __ocall_wrapper_test_nested_struct_table_t __ocall_wrapper_test_nested_struct_vec_at(__ocall_wrapper_test_nested_struct_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(__ocall_wrapper_test_nested_struct_table_t, vec, i, 0)
__flatbuffers_table_as_root(__ocall_wrapper_test_nested_struct)

__flatbuffers_define_table_field(0, __ocall_wrapper_test_nested_struct, n, nest1_table_t, 0)
__flatbuffers_define_scalar_field(1, __ocall_wrapper_test_nested_struct, __return_value, flatbuffers_int32, int32_t, INT32_C(0))

struct __ocall_wrapper_test_two_dimensional_array_table { uint8_t unused__; };

static inline size_t __ocall_wrapper_test_two_dimensional_array_vec_len(__ocall_wrapper_test_two_dimensional_array_vec_t vec)
__flatbuffers_vec_len(vec)
static inline __ocall_wrapper_test_two_dimensional_array_table_t __ocall_wrapper_test_two_dimensional_array_vec_at(__ocall_wrapper_test_two_dimensional_array_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(__ocall_wrapper_test_two_dimensional_array_table_t, vec, i, 0)
__flatbuffers_table_as_root(__ocall_wrapper_test_two_dimensional_array)

__flatbuffers_define_vector_field(0, __ocall_wrapper_test_two_dimensional_array, arr, flatbuffers_int32_vec_t, 0)
__flatbuffers_define_scalar_field(1, __ocall_wrapper_test_two_dimensional_array, __return_value, flatbuffers_int32, int32_t, INT32_C(0))


#include "flatcc/flatcc_epilogue.h"
#endif /* OCALLS_READER_H */
