#ifndef OCALLS_VERIFIER_H
#define OCALLS_VERIFIER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef OCALLS_READER_H
#include "ocalls_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int tim_verify_table(flatcc_table_verifier_descriptor_t *td);
static int message_verify_table(flatcc_table_verifier_descriptor_t *td);
static int __ocall_wrapper_print_messages_verify_table(flatcc_table_verifier_descriptor_t *td);

static int tim_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 8, 8) /* h */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 8, 8) /* m */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 8, 8) /* s */)) return ret;
    return flatcc_verify_ok;
}

static inline int tim_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, tim_identifier, &tim_verify_table);
}

static inline int tim_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, tim_type_identifier, &tim_verify_table);
}

static inline int tim_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &tim_verify_table);
}

static inline int tim_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &tim_verify_table);
}

static int message_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &tim_verify_table) /* t */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 1, 0, 1, 1, INT64_C(4294967295)) /* sender */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 2, 0, 1, 1, INT64_C(4294967295)) /* content */)) return ret;
    return flatcc_verify_ok;
}

static inline int message_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, message_identifier, &message_verify_table);
}

static inline int message_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, message_type_identifier, &message_verify_table);
}

static inline int message_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &message_verify_table);
}

static inline int message_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &message_verify_table);
}

static int __ocall_wrapper_print_messages_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 8, 8) /* count */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 1, 0, &message_verify_table) /* m */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 8, 8) /* __return_value */)) return ret;
    return flatcc_verify_ok;
}

static inline int __ocall_wrapper_print_messages_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, __ocall_wrapper_print_messages_identifier, &__ocall_wrapper_print_messages_verify_table);
}

static inline int __ocall_wrapper_print_messages_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, __ocall_wrapper_print_messages_type_identifier, &__ocall_wrapper_print_messages_verify_table);
}

static inline int __ocall_wrapper_print_messages_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &__ocall_wrapper_print_messages_verify_table);
}

static inline int __ocall_wrapper_print_messages_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &__ocall_wrapper_print_messages_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* OCALLS_VERIFIER_H */
